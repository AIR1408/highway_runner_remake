#version 330
layout(location = 0) in vec3 vertex_position;
layout(location = 1) in vec3 vertex_normal;
layout(location = 2) in vec2 tex_coord;
layout(location = 3) in vec3 vertex_color;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

out vec3 color;
out vec2 texCoord;
out vec3 normal;
out vec3 fragPos;

void main() {
    color = vertex_color;
    texCoord = tex_coord;
    normal = mat3(transpose(inverse(model))) * vertex_normal;
	//normal = vec3(model * vec4(vertex_normal, 0.0));
	
    vec4 FragmentPos = model * vec4(vertex_position, 1.0);
    fragPos = vec3(FragmentPos);
	
    gl_Position = projection * view * FragmentPos;
}
